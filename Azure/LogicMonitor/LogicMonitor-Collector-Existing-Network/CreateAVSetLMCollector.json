{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 13,
      "metadata": {
        "description": "Display Name for the Virtual Machine"
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": ["Standard_D1_v2","Standard_D2_v3","Standard_D4_v3"],
      "metadata": {
        "description": "VM Size/Type for the Virtual Machine"
      }
    },    
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "lmCollectorGroup": {
      "type": "string",
      "metadata": {
        "description": "Customers Collector Group Name."
      }   
    },
    "lmAccessKey": {
        "type": "securestring",
        "metadata": {
          "description": "LogicMonitor Access Key."
        }    
    },
    "lmSecretKey": {
        "type": "securestring",
        "metadata": {
          "description": "LogicMonitor Secret Key."
        }    
    },
    "lmCollectorSize": {
        "type": "string",
        "allowedValues": ["small","medium","large"],
        "defaultValue": "small",
        "metadata": {
          "description": "LogicMonitor Collector Size (Small 100 devices, Medium 500 devices, Large 750 devices)."
        }    
    },
    "lmHost": {
        "defaultValue": "ans",
        "type": "string",
        "allowedValues": ["ans","anstest"],
        "metadata": {
          "description": "LogicMonitor Environment"
        }    
    },
    "existingVnetResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Resource Group for the existing Virtual Network."
      }
    },
    "existingVnetName": {
      "type": "string",
      "metadata": {
        "description": "Enter Existing Virtual Network Name"
      }    
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Enter Existing Subnet Name"
      }    
    },
    "tagBusinessUnit": {
      "defaultValue": "IT",
      "type": "string",
      "metadata": {
        "description": "Enter business unit tag value"
      }    
    },
    "tagCostCentre": {
      "defaultValue": "IT",
      "type": "string",
      "metadata": {
        "description": "Enter cost centre tag value"
      }    
    },
    "tagOwner": {
      "defaultValue": "Firstname Lastname",
      "type": "string",
      "metadata": {
        "description": "Enter owners tag value"
      }    
    },
    "tagEnvironment": {
      "defaultValue": "Production",
      "type": "string",
      "metadata": {
        "description": "Enter environment tag value"
      }    
    },
    "tagApplicationRoles": {
      "defaultValue": "Monitoring",
      "type": "string",
      "metadata": {
        "description": "Enter application role tag value"
      }    
    }
  },
  "variables": {
    "availabilitySetName": "[concat( 'AS-', parameters('vmName'))]",
    "virtualNetworkId": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('existingVnetName'))]",
    "subnetRef": "[concat(variables('virtualNetworkId'),'/subnets/', parameters('existingSubnetName'))]",
    "networkSecurityGroup": "[concat(parameters('vmName'),'-nsg')]",
    "scriptLocation": "https://raw.githubusercontent.com/ans-cst/Cloud-Scripts/master/Azure/LogicMonitor/LogicMonitor-Collector-Existing-Network/CreateLMCollector.ps1",
    "script": "CreateLMCollector.ps1",
    "arguments": "[concat('-accessId ', '\"', parameters('lmAccessKey'), '\"', ' -accessKey ', '\"', parameters('lmSecretKey'), '\"', ' -collectorSize ', parameters('lmCollectorSize'), ' -lmHost ', parameters('lmHost'), ' -customerName ', '\"', parameters('lmCollectorGroup'), '\"')]"
    
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "tags": {
        "Business Unit": "[parameters('tagBusinessUnit')]",
        "Cost Centre": "[parameters('tagCostCentre')]",
        "Owner": "[parameters('tagOwner')]",
        "Environment": "[parameters('tagEnvironment')]",
        "Application Roles": "[parameters('tagApplicationRoles')]"
      },
      "sku": {
        "name": "Aligned"
      },
	    "properties": {
	      "platformFaultDomainCount": 2,
	      "platformUpdateDomainCount": 2
        }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-03-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('networkSecurityGroup')]",
      "tags": {
        "Business Unit": "[parameters('tagBusinessUnit')]",
        "Cost Centre": "[parameters('tagCostCentre')]",
        "Owner": "[parameters('tagOwner')]",
        "Environment": "[parameters('tagEnvironment')]",
        "Application Roles": "[parameters('tagApplicationRoles')]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "Outbound_Any",
            "properties": {
              "description": "Outbound to any",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'),'-nic', copyindex())]",
      "apiVersion": "2017-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroup'))]"
      ],
      "tags": {
        "Business Unit": "[parameters('tagBusinessUnit')]",
        "Cost Centre": "[parameters('tagCostCentre')]",
        "Owner": "[parameters('tagOwner')]",
        "Environment": "[parameters('tagEnvironment')]",
        "Application Roles": "[parameters('tagApplicationRoles')]"
      },
      "copy": {
        "name": "nicLoop",
        "count": 2
      },
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup'))]"
        },
        "ipConfigurations": [
          {
            "name": "[concat(parameters('vmName'),'-ipconfig')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'), copyIndex())]",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "tags": {
        "Business Unit": "[parameters('tagBusinessUnit')]",
        "Cost Centre": "[parameters('tagCostCentre')]",
        "Owner": "[parameters('tagOwner')]",
        "Environment": "[parameters('tagEnvironment')]",
        "Application Roles": "[parameters('tagApplicationRoles')]"
      },
      "copy": {
        "name": "virtualMachineLoop",
        "count": 2
      },
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'),'-vm', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 5,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),'-nic', copyindex()))]"
            }
          ]
        }
      }
    },
    {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('vmName'), copyIndex(), '/', 'LogicMonitor-Collector')]",
        "apiVersion": "2017-03-30",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "virtualMachineExtLoop",
          "count": 2
        },
        "scale": null,
        "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.7",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "fileUris": [
                  "[variables('scriptLocation')]"
                ]
            },
            "protectedSettings": {
                "commandToExecute": "[concat ('powershell -ExecutionPolicy Unrestricted -File ', variables('script'), ' ', variables('arguments'))]"  
            }
        },
        "dependsOn": [
          "virtualMachineLoop"
        ]
    }
  ]
}